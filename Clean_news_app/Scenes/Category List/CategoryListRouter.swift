//
//  CategoryListRouter.swift
//  Clean_news_app
//
//  Created by daniel on 18/05/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CategoryListRoutingLogic
{
  func routeToSourceList(segue: UIStoryboardSegue?)
}

protocol CategoryListDataPassing
{
  var dataStore: CategoryListDataStore? { get }
}

class CategoryListRouter: NSObject, CategoryListRoutingLogic, CategoryListDataPassing
{
  weak var viewController: CategoryListViewController?
  var dataStore: CategoryListDataStore?
  
  // MARK: Routing
  
  func routeToSourceList(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
      let destinationVC = segue.destination as! SourceListViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToSources(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "SourceListViewController") as! SourceListViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToSources(source: dataStore!, destination: &destinationDS)
      navigateToSourceList(source: viewController!, destination: destinationVC)
    }
  }

  func navigateToSourceList(source: CategoryListViewController, destination: SourceListViewController)
  {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
  func passDataToSources(source: CategoryListDataStore, destination: inout SourceListDataStore)
  {
    destination.category = source.category
  }
}
